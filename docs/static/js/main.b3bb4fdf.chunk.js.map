{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAACC,GAExB,IAAMC,EAAaD,EAAMC,WACnBC,EAAgBF,EAAME,cAG5B,EAAoCC,mBAASH,EAAMC,YAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAE6B,IAA3BJ,EAAWK,OAAOC,SAClBR,EAAc,CAAEE,GAAH,mBAAkBH,KAC/BI,EAAc,MAKlB,SACI,uBAAOM,KAAK,OAAOC,MAASR,EAAaS,SAfvB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,uBCZlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAKA,EAAIG,OAAOC,UAAUZ,QAVf,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAE1B,OAII,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKP,EAAIA,IAAKQ,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCLPO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAASC,GAAWwB,MAAM,SAAAC,GAEtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAGGqB,EDlByBK,CAAa1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACEoB,EAAU,oBAAIJ,UAAU,mCAAd,0BAAqE,KAEjF,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CAA0BA,IAAOA,GAAfA,EAAIC,aEdjCgB,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,QAA9C,mBAAOF,EAAP,KAAmBC,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,EAAgBD,WAAeA,IAC9D,uBAEA,6BAEQA,EAAWwB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAA4BA,SAAYA,GAAvBA,Y,sBCdhD4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b3bb4fdf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = (props) => {\r\n\r\n    const categories = props.categories;\r\n    const setCategories = props.setCategories;\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(props.categories)\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length!==0) {\r\n            setCategories( [inputValue, ...categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input type=\"text\" value = {inputValue}  onChange= { handleInputChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=aBcWZTz8fH5GjN9CAmLyIN4d4PQPypI2`\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            img: img.images.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ img }) => {\r\n\r\n    return (\r\n\r\n        \r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.img} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n            { loading ? <h4 className=\"animate__animated animate__flash\">Cargando... </h4> : null }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={img.id} img ={ img }/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category ).then( imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n        } )\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState([\"sao\"])\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } categories = { categories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid key = { category } category= { category } />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n\r\n}","import React from 'react';\nimport { GifExpertApp } from './GifExpertApp';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}